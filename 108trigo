#! /usr/bin/env python3

from math import sqrt
import sys
from matrix import Square_Matrix
from function import *

def print_matrice(matrix):
	j = 0
	x = 0
	while j != matrix.size:
		x = 0
		while x != matrix.size:
			if x != matrix.size - 1:
				print("%.2f" % round(matrix.matrice[j][x], 2), "	", end = "")
			else:
				print("%.2f" % round(matrix.matrice[j][x], 2))
			x = x + 1
		j = j + 1

def display_help():
	print("USAGE")
	print("\t\t./108trigo fun a0 a1 a2....")
	print()
	print("DESCRIPTION")
	print("\t\tfun	function to be applied, among at least \"EXP\", \"COS\", \"SIN\", \"COSH\" and \"SINH\"")
	print("\t\tai	coeficients of the matrix")

def verification_argument():
	i = 2
	if len(sys.argv) == 2 and sys.argv[1] == "-h":
		display_help()
		return (-1)
	try:
		a = int(sqrt(len(sys.argv) - 2))
		assert a == sqrt(len(sys.argv) - 2)
		assert len(sys.argv) > 2
	except:
		return (0)
	while i != len(sys.argv):
		try:
			float(sys.argv[i])
		except:
			return (0)
		i = i + 1
	return (a)

if __name__ == "__main__":
	a = verification_argument()
	if a == 0:
		print("retry with -h")
		sys.exit(84)
	if a == -1:
		sys.exit(0)
	matrix = Square_Matrix(a, sys.argv[2:])
	if sys.argv[1] == "COS":
		matrix = cosinus(matrix)
	elif sys.argv[1] == "EXP":
		matrix = exponentielle(matrix)
	elif sys.argv[1] == "SIN":
		matrix = sinus(matrix)
	elif sys.argv[1] == "COSH":
		matrix = cosinus_hyperbolique(matrix)
	elif sys.argv[1] == "SINH":
		matrix = sinus_hyperbolique(matrix)
	else:
		print("retry with -h")
		sys.exit(84)
	print_matrice(matrix)
	sys.exit(0)
